make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.3
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2020 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Mon Sep 20 22:32:46 2021

# Variables

# makefile (from 'Makefile', line 194)
_PCH_GCH := bin/Release/obj/PCH.hpp.gch
# environment
GDK_BACKEND = x11
# environment
LC_ALL = C
# environment
NO_AT_BRIDGE = 1
 
# makefile (from 'Makefile', line 124)
PRODUCTION_MACOS_ICON = icon
# makefile (from 'Makefile', line 177)
OBJ_SUBDIRS := bin/Release/obj/Utility bin/Release/obj/Platform bin/Release/obj/Platform/Unix bin/Release/obj/Platform/MacOS bin/Release/obj/Platform/Win32
# environment
GTK_RC_FILES = /etc/gtk/gtkrc:/home/keith/.gtkrc:/home/keith/.config/gtkrc
# makefile (from 'Makefile', line 274)
color_blue := \033[0;34m
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-412a4bcc-b6de-422a-90dd-7e82139cbc0c.sock
# makefile (from 'Makefile', line 87)
SRC_DIR := src
# environment
LC_NAME = en_IE.UTF-8
# environment
LC_NUMERIC = en_IE.UTF-8
# environment
VSCODE_CWD = /home/keith
# makefile (from 'Makefile', line 22)
SRC_TARGET = 
# environment
UBUNTU_MENUPROXY = 1
# makefile (from 'Makefile', line 234)
ASM_COMPILE = objdump -d -C -Mintel $< > $@
# environment
LC_ADDRESS = en_IE.UTF-8
# default
MAKE_COMMAND := make
# environment
GTK3_MODULES = canberra-gtk-module:xapp-gtk3-module
# makefile (from 'Makefile', line 205)
_DIRECTORIES := bin bin/Release bin/Release/dep bin/Release/dep/Platform bin/Release/dep/Platform/MacOS bin/Release/dep/Platform/Unix bin/Release/dep/Platform/Win32 bin/Release/dep/Utility bin/Release/obj bin/Release/obj/Platform bin/Release/obj/Platform/MacOS bin/Release/obj/Platform/Unix bin/Release/obj/Platform/Win32 bin/Release/obj/Utility
# automatic
@D = $(patsubst %/,%,$(dir $@))
# makefile (from 'Makefile', line 91)
SOURCE_FILES := Platform/Unix/LinuxPlatform.cpp Platform/MacOS/MacOSPlatform.cpp Platform/Win32/WindowsPlatform.cpp Platform/Win32/Resource.rc Main.cpp
# makefile (from 'Makefile', line 171)
OBJ_DIR := bin/Release/obj
# makefile (from 'env/linux.all.mk', line 19)
PRODUCTION_LINUX_ICON := sfml
# environment
VSCODE_BROWSER_CODE_LOADING = bypassHeatCheck
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# makefile (from 'Makefile', line 99)
_LINK_LIBRARIES := -lsfml-graphics -lsfml-audio -lsfml-network -lsfml-window -lsfml-system -lstdc++fs -lX11
# default
.VARIABLES := 
# environment
PWD = /home/keith/OneDrive/College Files/Semester 05/C++ Introduction/sfml-vscode-boilerplate
# makefile (from 'Makefile', line 385)
define do_copy_to
	@printf  '$(color_blue)cp -r $(1) $(2)\n'
	$(shell cp -r "$(1)" "$(2)")
endef
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
MAIL = /var/spool/mail/keith
# environment
OLDPWD = /home/keith
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'env/linux.all.mk', line 7)
INCLUDE_DIRS := /usr/local/include
# makefile (from 'Makefile', line 128)
PRODUCTION_MACOS_MAKE_DMG = true
# environment
VSCODE_LOG_STACK = false
# automatic
%F = $(notdir $%)
# environment
VSCODE_CODE_CACHE_PATH = /home/keith/.config/Code - OSS/CachedData/2d23c42a936db1c7b3b06f918cde29561cc47cd6
# environment
XDG_SESSION_PATH = /org/freedesktop/DisplayManager/Session1
# makefile (from 'Makefile', line 180)
_DEPS := Platform/Unix/LinuxPlatform.cpp.d Platform/MacOS/MacOSPlatform.cpp.d Platform/Win32/WindowsPlatform.cpp.d Main.cpp.d
# environment
LANG = C
# environment
XAUTHORITY = /home/keith/.Xauthority
# default
.LOADED := 
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# makefile (from 'Makefile', line 126)
PRODUCTION_MACOS_BUNDLE_DISPLAY_NAME = App
# makefile
MAKEFLAGS = pqrR --no-print-directory
# makefile (from 'Makefile', line 207)
_CLEAN := true
# makefile (from 'Makefile', line 277)
define compile_with
	$(if $(_CLEAN),@printf '   $(color_blue)$($(2):$(OBJ_DIR)/%=%)\n',@printf '$(color_blue)')
	$(_Q)$(3) && $(4)
endef
# makefile (from 'Makefile', line 175)
_OBJS := Platform/Unix/LinuxPlatform.cpp.o Platform/MacOS/MacOSPlatform.cpp.o Platform/Win32/WindowsPlatform.cpp.o Main.cpp.o
# makefile
CURDIR := /home/keith/OneDrive/College Files/Semester 05/C++ Introduction/sfml-vscode-boilerplate
# environment
VSCODE_PIPE_LOGGING = true
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
PAM_KWALLET5_LOGIN = /run/user/1000/kwallet5.socket
# makefile (from 'Makefile', line 228)
OBJ_COMPILE_T = $(CC) $(CFLAGS_DEPS_T) $(_BUILD_MACROS) $(_INCLUDE_DIRS) $(_INCLUDE_PCH) $(CFLAGS) -o $@ -c $<
# environment
MFLAGS = -pqrR --no-print-directory
# makefile (from 'Makefile', line 217)
RC = windres.exe
# default
.SHELLFLAGS := -c
# makefile (from 'Makefile', line 98)
_BUILD_MACROS := 
# environment
QT_LINUX_ACCESSIBILITY_ALWAYS_ON = 1
# makefile (from 'env/linux.all.mk', line 10)
BUILD_FLAGS :=  -pthread
# makefile (from 'Makefile', line 209)
_TARGET_DEPS := bin/Release/obj/PCH.hpp.gch bin/Release/obj/Platform/Unix/LinuxPlatform.cpp.o bin/Release/obj/Platform/MacOS/MacOSPlatform.cpp.o bin/Release/obj/Platform/Win32/WindowsPlatform.cpp.o bin/Release/obj/Main.cpp.o  
# environment
XDG_CONFIG_DIRS = /home/keith/.config/kdedefaults:/etc/xdg
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'env/.all.mk', line 28)
PRODUCTION_DEPENDENCIES := content
# environment
XCURSOR_THEME = Sweet-cursors
# environment
XDG_SESSION_DESKTOP = KDE
# environment
VSCODE_CRASH_REPORTER_START_OPTIONS = {"companyName":"Microsoft","productName":"Code - OSS","submitURL":"","uploadToServer":false}
# makefile (from 'env/linux.all.mk', line 22)
PRODUCTION_LINUX_APP_COMMENT := My SFML Game
# makefile (from 'env/linux.all.mk', line 1)
MAKEFILE_LIST := Makefile env/.all.mk env/.release.mk env/linux.all.mk
# automatic
@F = $(notdir $@)
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
VSCODE_PID = 6254
# makefile (from 'Makefile', line 127)
PRODUCTION_MACOS_BUNDLE_NAME = App
# environment
XDG_SESSION_TYPE = x11
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'env/.all.mk', line 7)
_CFLAGS_OTHER := -fdiagnostics-color=always
# makefile (from 'Makefile', line 185)
_PCH_HFILE := PCH.hpp
# environment
SESSION_MANAGER = local/garuda:@/tmp/.ICE-unix/2550,unix/garuda:/tmp/.ICE-unix/2550
# automatic
*F = $(notdir $*)
# makefile (from 'Makefile', line 189)
_SYMBOLS := -s
# makefile (from 'Makefile', line 243)
UNI_LINK := ⇛
# environment
CHROME_DESKTOP = code-oss.desktop
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# automatic
<D = $(patsubst %/,%,$(dir $<))
# makefile (from 'Makefile', line 179)
DEP_DIR := bin/Release/dep
# makefile (from 'Makefile', line 119)
_LINUX_GREP_CWD := \/home\/keith\/OneDrive\/College Files\/Semester 05\/C++ Introduction\/sfml-vscode-boilerplate
# makefile (from 'Makefile', line 182)
DEP_SUBDIRS := bin/Release/dep/Utility bin/Release/dep/Platform bin/Release/dep/Platform/Unix bin/Release/dep/Platform/MacOS bin/Release/dep/Platform/Win32
# makefile (from 'Makefile', line 13)
PLATFORM = linux
# environment
VSCODE_NLS_CONFIG = {"locale":"en-gb","availableLanguages":{},"_languagePackSupport":true}
# environment
BREAKPAD_DUMP_LOCATION = /home/keith/.config/Code - OSS/exthost Crash Reports
# default
MAKE_HOST := x86_64-pc-linux-gnu
# makefile (from 'Makefile', line 176)
OBJS := bin/Release/obj/Platform/Unix/LinuxPlatform.cpp.o bin/Release/obj/Platform/MacOS/MacOSPlatform.cpp.o bin/Release/obj/Platform/Win32/WindowsPlatform.cpp.o bin/Release/obj/Main.cpp.o
# makefile (from 'Makefile', line 10)
SHELL := /bin/sh
# default
MAKECMDGOALS := makepch
# makefile (from 'Makefile', line 242)
UNI_COPY := ➦
# environment
SHLVL = 0
# makefile (from 'Makefile', line 186)
_PCH_EXT := hpp
# makefile (from 'env/.all.mk', line 3)
DUMP_ASSEMBLY := false
# environment
MAKELEVEL := 1
# makefile (from 'Makefile', line 290)
MKDIR := @mkdir -p
# default
MAKE = $(MAKE_COMMAND)
# makefile (from 'Makefile', line 16)
_BUILDL := release
# environment
PATH = /usr/local/sbin:/usr/local/bin:/usr/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl
# makefile (from 'Makefile', line 74)
BUILD_MACROS = 
# default
MAKEFILES := 
# makefile (from 'Makefile', line 96)
_INCLUDE_DIRS := -Isrc/ -Ilib/ -I/usr/local/include
# environment
LC_MONETARY = en_IE.UTF-8
# environment
MOTD_SHOWN = pam
# automatic
^F = $(notdir $^)
# environment
LC_TIME = en_IE.UTF-8
# makefile (from 'Makefile', line 125)
PRODUCTION_MACOS_BUNDLE_COMPANY = developer
# makefile (from 'Makefile', line 221)
CFLAGS_DEPS_T = -MT $@ -MMD -MP -MF $(DEP_DIR)/.$(TEST_DIR)/$*.Td
# makefile (from 'Makefile', line 282)
linking_with = 	$(if $(_CLEAN),@printf '\n$(color_blue)$(UNI_LINK)  Linking: $(1)')
# environment
VSCODE_LOG_NATIVE = false
# makefile (from 'Makefile', line 222)
PCH_COMPILE = $(CC) $(CFLAGS_DEPS) $(_BUILD_MACROS) $(CFLAGS) $(_INCLUDE_DIRS) -o $@ -c $<
# makefile (from 'Makefile', line 224)
_INCLUDE_PCH := -include bin/Release/obj/PCH.hpp
# makefile (from 'Makefile', line 37)
BUILD_STATIC = false
# makefile (from 'Makefile', line 227)
OBJ_COMPILE = $(CC) $(CFLAGS_DEPS) $(_BUILD_MACROS) $(_INCLUDE_DIRS) $(_INCLUDE_PCH) $(CFLAGS) -o $@ -c $<
# environment
LC_TELEPHONE = en_IE.UTF-8
# automatic
?F = $(notdir $?)
# environment
KDE_APPLICATIONS_AS_SCOPE = 1
# makefile (from 'Makefile', line 83)
NAME = game.exe
# environment
XDG_SEAT = seat0
# environment
XDG_CURRENT_DESKTOP = KDE
# automatic
+F = $(notdir $+)
# environment
XDG_SEAT_PATH = /org/freedesktop/DisplayManager/Seat0
# environment
DESKTOP_SESSION = plasma
# makefile (from 'Makefile', line 212)
_Q := @
# makefile (from 'env/.all.mk', line 2)
CLEAN_OUTPUT := true
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = KDE
# makefile (from 'Makefile', line 236)
POST_COMPILE = mv -f $(DEP_DIR)/$*.Td $(DEP_DIR)/$*.d && touch $@
# makefile (from 'Makefile', line 169)
_SOURCES_IF_RC := Platform/Unix/LinuxPlatform.cpp Platform/MacOS/MacOSPlatform.cpp Platform/Win32/WindowsPlatform.cpp Main.cpp
# 'override' directive
GNUMAKEFLAGS := 
# environment
LOGNAME = keith
# makefile (from 'Makefile', line 93)
PROJECT_DIRS := Utility Platform Platform/Unix Platform/MacOS Platform/Win32
# environment
XDG_VTNR = 1
# makefile (from 'env/linux.all.mk', line 14)
LINK_LIBRARIES := sfml-graphics sfml-audio sfml-network sfml-window sfml-system stdc++fs X11
# makefile (from 'Makefile', line 390)
copy_to = 	$(if $(wildcard $(2)/$(notdir $(1))),,$(if $(_CLEAN),$(call do_copy_to_clean,$(1),$(2)),$(call do_copy_to,$(1),$(2))))
# makefile (from 'Makefile', line 286)
build_deps = 	$(foreach dep,$(BUILD_DEPENDENCIES),$(call copy_to,$(dep),$(BLD_DIR)))
# makefile
.DEFAULT_GOAL := all
# environment
SYSTEMD_EXEC_PID = 2381
# makefile (from 'Makefile', line 129)
PRODUCTION_MACOS_BACKGROUND = dmg-background
# makefile (from 'Makefile', line 275)
color_purple := \033[0;35m
# makefile (from 'Makefile', line 230)
RC_COMPILE = -$(RC) -J rc -O coff --preprocessor-arg=-MT --preprocessor-arg=$@ --preprocessor-arg=-MMD --preprocessor-arg=-MP --preprocessor-arg=-MF --preprocessor-arg=$(DEP_DIR)/$*.rc.Td $(_BUILD_MACROS) $(_INCLUDE_DIRS) -i $< -o $@
# environment
DISPLAY = :0
# environment
GTK_MODULES = canberra-gtk-module:appmenu-gtk-module
# environment
USER = keith
 
# makefile (from 'Makefile', line 187)
_PCH_COMPILER_EXT := gch
# default
MAKE_VERSION := 4.3
# environment
KDE_SESSION_UID = 1000
# 'override' directive
.SHELLSTATUS := 0
# makefile (from 'Makefile', line 15)
BUILD = Release
# makefile (from 'env/.all.mk', line 19)
PRODUCTION_FOLDER := build
# makefile (from 'Makefile', line 238)
POST_COMPILE_RC = mv -f $(DEP_DIR)/$*.rc.Td $(DEP_DIR)/$*.rc.d && touch $@
# makefile (from 'Makefile', line 103)
TEST_DIR := 
# environment
LC_MEASUREMENT = en_IE.UTF-8
# makefile (from 'Makefile', line 254)
ORIGIN_FLAG := '-Wl,-R$$ORIGIN'
# environment
_ = /usr/bin/make
# environment
LC_PAPER = en_IE.UTF-8
# makefile (from 'Makefile', line 167)
_LIB_DIRS := -Llib/ -L/usr/local/lib
# makefile (from 'env/.all.mk', line 5)
_CFLAGS_STD := -std=c++17
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from 'env/linux.all.mk', line 2)
CFLAGS := -O2 -std=c++17 -Wall -Werror -Wextra -Wpedantic -Wunreachable-code -Wunused -Wignored-qualifiers -Wcast-align -Wformat-nonliteral -Wformat=2 -Winvalid-pch -Wmissing-declarations -Wmissing-format-attribute -Wmissing-include-dirs -Wredundant-decls -Wswitch-default -Wodr -fdiagnostics-color=always -fpic
# makefile (from 'env/linux.all.mk', line 21)
PRODUCTION_LINUX_APP_NAME := SFML Boilerplate
# makefile (from 'env/linux.all.mk', line 4)
LIB_DIRS := /usr/local/lib
# makefile (from 'Makefile', line 192)
_PCH := bin/Release/obj/PCH.hpp
# makefile (from 'Makefile', line 60)
PRODUCTION_FOLDER_RESOURCES := build
# environment
XDG_SESSION_CLASS = user
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/services/extensions/node/extensionHostProcess
# environment
GTK2_RC_FILES = /etc/gtk-2.0/gtkrc:/home/keith/.gtkrc-2.0:/home/keith/.config/gtkrc-2.0
# environment
HOME = /home/keith
# makefile (from 'env/.all.mk', line 1)
MAX_PARALLEL_JOBS := 8
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-7e486485-1.58.0-main.sock
# environment
HG = /usr/bin/hg
# makefile (from 'Makefile', line 220)
CFLAGS_DEPS = -MT $@ -MMD -MP -MF $(DEP_DIR)/$*.Td
# environment
XDG_SESSION_ID = 2
# makefile (from 'env/.all.mk', line 21)
PRODUCTION_EXCLUDE := *.psd *.rar *.7z Thumbs.db .DS_Store
# environment
XCURSOR_SIZE = 24
# makefile (from 'Makefile', line 153)
BLD_DIR := bin/Release
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# makefile (from 'Makefile', line 79)
BUILD_DEPENDENCIES = 
# makefile (from 'Makefile', line 181)
DEPS := bin/Release/dep/Platform/Unix/LinuxPlatform.cpp.d bin/Release/dep/Platform/MacOS/MacOSPlatform.cpp.d bin/Release/dep/Platform/Win32/WindowsPlatform.cpp.d bin/Release/dep/Main.cpp.d bin/Release/dep/PCH.d
# makefile (from 'Makefile', line 2)
SUFFIXES = 
# makefile (from 'Makefile', line 162)
TARGET := bin/Release/game.exe
# environment
QT_AUTO_SCREEN_SCALE_FACTOR = 0
# makefile (from 'Makefile', line 154)
_BASENAME := game
# environment
VSCODE_CLI = 1
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# makefile (from 'env/.all.mk', line 17)
PRECOMPILED_HEADER := PCH
# makefile (from 'env/.all.mk', line 6)
_CFLAGS_WARNINGS := -Wall -Werror -Wextra -Wpedantic -Wunreachable-code -Wunused -Wignored-qualifiers -Wcast-align -Wformat-nonliteral -Wformat=2 -Winvalid-pch -Wmissing-declarations -Wmissing-format-attribute -Wmissing-include-dirs -Wredundant-decls -Wswitch-default -Wodr
# makefile (from 'Makefile', line 88)
LIB_DIR := lib
# environment
KDE_SESSION_VERSION = 5
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs archives jobserver output-sync check-symlink guile load
# makefile (from 'env/linux.all.mk', line 1)
CC := g++
# makefile (from 'Makefile', line 380)
define do_copy_to_clean
	@printf  '$(color_blue)$(UNI_COPY)  Copying \"$(1)\" to \"$(CURDIR)/$(2)\"\n'
	$(shell cp -r "$(1)" "$(2)")
endef
# makefile (from 'Makefile', line 237)
POST_COMPILE_T = mv -f $(DEP_DIR)/.$(TEST_DIR)/$*.Td $(DEP_DIR)/.$(TEST_DIR)/$*.d && touch $@
# environment
KDE_FULL_SESSION = true
# environment
LC_IDENTIFICATION = en_IE.UTF-8
# variable set hash-table stats:
# Load=202/1024=20%, Rehash=0, Collisions=40/461=9%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# bin/Release/dep/.: could not be stat'd.
# bin/Release/obj: could not be stat'd.
# bin/Release/obj/Platform: could not be stat'd.
# / (device 29, inode 256): No files, no impossibilities so far.
# src (device 47, inode 125383): 5 files, no impossibilities so far.
# . (device 47, inode 104709): 17 files, no impossibilities.
# bin/Release/dep: could not be stat'd.
# bin/Release: could not be stat'd.
# bin (device 47, inode 125679): No files, no impossibilities so far.
# bin/Release/dep/Platform: could not be stat'd.

# 22 files, no impossibilities in 10 directories.

# Implicit Rules

bin/Release/obj/%.o: src/% bin/Release/obj/PCH.hpp.gch | bin/Release/dep/%.d bin bin/Release bin/Release/dep bin/Release/dep/Platform bin/Release/dep/Platform/MacOS bin/Release/dep/Platform/Unix bin/Release/dep/Platform/Win32 bin/Release/dep/Utility bin/Release/obj bin/Release/obj/Platform bin/Release/obj/Platform/MacOS bin/Release/obj/Platform/Unix bin/Release/obj/Platform/Win32 bin/Release/obj/Utility
#  recipe to execute (from 'Makefile', line 307):
	$(call compile_with,@,<,$(OBJ_COMPILE),$(POST_COMPILE))

bin/Release/obj/./%.o: /% bin/Release/obj/PCH.hpp.gch | bin/Release/dep/./%.d bin bin/Release bin/Release/dep bin/Release/dep/Platform bin/Release/dep/Platform/MacOS bin/Release/dep/Platform/Unix bin/Release/dep/Platform/Win32 bin/Release/dep/Utility bin/Release/obj bin/Release/obj/Platform bin/Release/obj/Platform/MacOS bin/Release/obj/Platform/Unix bin/Release/obj/Platform/Win32 bin/Release/obj/Utility
#  recipe to execute (from 'Makefile', line 310):
	$(call compile_with,@,<,$(OBJ_COMPILE_T),$(POST_COMPILE_T))

bin/Release/obj/%.hpp.gch: src/%.hpp | bin/Release/dep/%.d bin bin/Release bin/Release/dep bin/Release/dep/Platform bin/Release/dep/Platform/MacOS bin/Release/dep/Platform/Unix bin/Release/dep/Platform/Win32 bin/Release/dep/Utility bin/Release/obj bin/Release/obj/Platform bin/Release/obj/Platform/MacOS bin/Release/obj/Platform/Unix bin/Release/obj/Platform/Win32 bin/Release/obj/Utility
#  recipe to execute (from 'Makefile', line 313):
	$(call compile_with,@,<,$(PCH_COMPILE),$(POST_COMPILE))

bin/Release/obj/%.res: src/%.rc | bin/Release/dep/%.rc.d bin bin/Release bin/Release/dep bin/Release/dep/Platform bin/Release/dep/Platform/MacOS bin/Release/dep/Platform/Unix bin/Release/dep/Platform/Win32 bin/Release/dep/Utility bin/Release/obj bin/Release/obj/Platform bin/Release/obj/Platform/MacOS bin/Release/obj/Platform/Unix bin/Release/obj/Platform/Win32 bin/Release/obj/Utility
#  recipe to execute (from 'Makefile', line 316):
	$(call compile_with,@,<,$(RC_COMPILE),$(POST_COMPILE_RC))

/%.o.asm: bin/Release/obj/%.o
#  recipe to execute (from 'Makefile', line 319):
	$(if $(_CLEAN),@printf '   $(color_purple)$@\n')
	$(_Q)$(ASM_COMPILE)

bin/Release/lib%-s.a: bin/Release/obj/PCH.hpp.gch bin/Release/obj/Platform/Unix/LinuxPlatform.cpp.o bin/Release/obj/Platform/MacOS/MacOSPlatform.cpp.o bin/Release/obj/Platform/Win32/WindowsPlatform.cpp.o bin/Release/obj/Main.cpp.o
#  recipe to execute (from 'Makefile', line 323):
	$(call linking_with,$@)
	-$(_Q)rm -rf $@
	$(_Q)ar -c -r -s $@ $(OBJS)
	@printf '\n'

bin/Release/dep/%.d:
#  recipe to execute (from 'Makefile', line 464):
	

%.c:

%.cpp:

%.h:

%.hpp:

%.rc:

%.res:

%.inl:

%.o:

%.d:

%.asm:

# 17 implicit rules, 0 (0.0%) terminal.
# Files

# Not a target:
.cpp:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
env/linux.all.mk:
#  Implicit rule search has been done.
#  Last modified 2021-09-18 20:00:45
#  File has been updated.
#  Successfully updated.

# Not a target:
.h:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
env/linux.release.mk:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Failed to be updated.

# Not a target:
.hpp:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

bin/Release/obj/Platform/MacOS:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

bin/Release/obj/Platform/Unix:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

bin/Release/dep:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

bin/Release/dep/Platform/Win32:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

makeproduction: rmprod mkdirprod releasetoprod
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 428):
	@printf '   $(color_blue)Adding dynamic libraries & project dependencies...\n'
	$(foreach dep,$(PRODUCTION_DEPENDENCIES),$(call copy_to,$(dep),$(PRODUCTION_FOLDER_RESOURCES)))
	$(foreach excl,$(PRODUCTION_EXCLUDE),$(shell find "$(PRODUCTION_FOLDER_RESOURCES)" -name '$(excl)' -delete))

.PRECIOUS: bin/Release/dep/%.d
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

bin/Release/game.so: bin/Release/obj/PCH.hpp.gch bin/Release/obj/Platform/Unix/LinuxPlatform.cpp.o bin/Release/obj/Platform/MacOS/MacOSPlatform.cpp.o bin/Release/obj/Platform/Win32/WindowsPlatform.cpp.o bin/Release/obj/Main.cpp.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 335):
	$(call linking_with,$@)
	$(_Q)$(CC) -shared $(_LIB_DIRS) $(OBJS) -o $@ $(_SYMBOLS) $(_LINK_LIBRARIES) $(BUILD_FLAGS)
	@printf '\n'

# Not a target:
env/.release.mk:
#  Implicit rule search has been done.
 
#  Last modified 2021-09-18 20:00:45
#  File has been updated.
#  Successfully updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2021-09-18 20:00:45
#  File has been updated.
#  Successfully updated.

bin/Release/game.dylib: bin/Release/obj/PCH.hpp.gch bin/Release/obj/Platform/Unix/LinuxPlatform.cpp.o bin/Release/obj/Platform/MacOS/MacOSPlatform.cpp.o bin/Release/obj/Platform/Win32/WindowsPlatform.cpp.o bin/Release/obj/Main.cpp.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 340):
	$(call linking_with,$(BLD_DIR)/$(_BASENAME).dylib)
	$(_Q)$(CC) -dynamiclib -undefined suppress -flat_namespace $(_LIB_DIRS) $(OBJS) -o $@ $(_SYMBOLS) $(_LINK_LIBRARIES) $(BUILD_FLAGS)
	@printf '\n'

bin/Release/dep/Platform:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

mkdirprod:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 377):
	$(MKDIR) "$(PRODUCTION_FOLDER)"

bin/Release/dep/Platform/MacOS:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

# Not a target:
.asm:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

bin/Release/obj/Platform:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

.DELETE_ON_ERROR: all
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

buildprod: all makeproduction
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 361):
	$(if $(_CLEAN),@printf '   $(color_blue)Cleaning old build files & folders...\n\n',@printf '$(color_blue)')
	$(_Q)$(RM) $(TARGET) $(DEPS) $(OBJS)

bin/Release/dep/PCH.d:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'PCH'
#  File is an intermediate prerequisite.
#  Last modified 2514-05-30 02:53:03.107374182
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 464):
	

# Not a target:
src/PCH.hpp:
#  Implicit rule search has been done.
#  Last modified 2021-09-18 20:00:45
#  File has been updated.
#  Successfully updated.

bin/Release:
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := bin/Release
# automatic
# * := 
# automatic
# < := 
# automatic
# + := 
# automatic
# % := 
# automatic
# ^ := 
# automatic
# ? := 
# automatic
# | := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/14=7%
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

bin/Release/game.exe: bin/Release/obj/PCH.hpp.gch bin/Release/obj/Platform/Unix/LinuxPlatform.cpp.o bin/Release/obj/Platform/MacOS/MacOSPlatform.cpp.o bin/Release/obj/Platform/Win32/WindowsPlatform.cpp.o bin/Release/obj/Main.cpp.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 345):
	$(call linking_with,$@)
	$(_Q)$(CC) $(_LIB_DIRS) $(_SYMBOLS) -o $@ $(ORIGIN_FLAG) $(OBJS) $(_LINK_LIBRARIES) $(BUILD_FLAGS)
	@printf '\n'
	$(call build_deps)

bin/Release/dep/Platform/Unix:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

# Not a target:
bin/Release/obj/Platform/MacOS/MacOSPlatform.cpp.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
bin/Release/obj/Platform/Unix/LinuxPlatform.cpp.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

makebuild: bin/Release/game.exe
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 298):
	@printf '   $(color_blue)Target is up to date.\n'

bin/Release/obj/Utility:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

all:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 262):
	@$(MAKE) makepch
	@$(MAKE) -j$(MAX_PARALLEL_JOBS) makebuild

bin/Release/obj/Platform/Win32:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

rmprod:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 369):
	@printf '\n'
	-$(_Q)rm -rf "$(if $(filter osx,$(PLATFORM)),$(PRODUCTION_FOLDER_MACOS),$(PRODUCTION_FOLDER))"
	-$(_Q)rm -rf ~/.local/share/applications/$(NAME).desktop

# Not a target:
.res:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
env/.all.mk:
#  Implicit rule search has been done.
#  Last modified 2021-09-18 20:00:45
#  File has been updated.
#  Successfully updated.

# Not a target:
.d:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

makepch: bin/Release/obj/PCH.hpp.gch
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/5=0%
#  recipe to execute (from 'Makefile', line 293):
	@printf ''

# Not a target:
.inl:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

bin:
#  Implicit rule search has not been done.
#  Last modified 2021-09-20 21:00:46.568317044
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

# Not a target:
.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

bin/Release/obj:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

rebuild: clean all
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
.c:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
bin/Release/obj/Platform/Win32/WindowsPlatform.cpp.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

releasetoprod: bin/Release/game.exe
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 409):
	$(_Q)cp $(TARGET) "$(PRODUCTION_FOLDER)"
	$(_Q)cp "env/linux/$(PRODUCTION_LINUX_ICON).png" "$(PRODUCTION_FOLDER)/$(PRODUCTION_LINUX_ICON).png"
	$(_Q)cp "env/linux/exec.desktop "$(PRODUCTION_FOLDER)/$(NAME).desktop"
	$(_Q)sed -i 's/^Exec=.*/Exec=$(_LINUX_GREP_CWD)\/$(PRODUCTION_FOLDER)\/$(NAME)/' "$(PRODUCTION_FOLDER)/$(NAME).desktop"
	$(_Q)sed -i 's/^Path=.*/Path=$(_LINUX_GREP_CWD)\/$(PRODUCTION_FOLDER)/' "$(PRODUCTION_FOLDER)/$(NAME).desktop"
	$(_Q)sed -i 's/^Name=.*/Name=$(PRODUCTION_LINUX_APP_NAME)/' "$(PRODUCTION_FOLDER)/$(NAME).desktop"
	$(_Q)sed -i 's/^Comment=.*/Comment=$(PRODUCTION_LINUX_APP_COMMENT)/' "$(PRODUCTION_FOLDER)/$(NAME).desktop"
	$(_Q)sed -i 's/^Icon=.*/Icon=$(_LINUX_GREP_CWD)\/$(PRODUCTION_FOLDER)\/$(PRODUCTION_LINUX_ICON).png/' "$(PRODUCTION_FOLDER)/$(NAME).desktop"
	$(_Q)chmod +x "$(PRODUCTION_FOLDER)/$(NAME)"
	$(_Q)chmod +x "$(PRODUCTION_FOLDER)/$(NAME).desktop"
	$(_Q)cp "$(PRODUCTION_FOLDER)/$(NAME).desktop" ~/.local/share/applications

bin/Release/game: bin/Release/obj/PCH.hpp.gch bin/Release/obj/Platform/Unix/LinuxPlatform.cpp.o bin/Release/obj/Platform/MacOS/MacOSPlatform.cpp.o bin/Release/obj/Platform/Win32/WindowsPlatform.cpp.o bin/Release/obj/Main.cpp.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 351):
	$(call linking_with,$@)
	$(_Q)$(CC) $(_LIB_DIRS) $(_SYMBOLS) -o $@ $(ORIGIN_FLAG) $(OBJS) $(_LINK_LIBRARIES) $(BUILD_FLAGS)
	@printf '\n'
	$(call build_deps)

bin/Release/dep/Utility:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

bin/Release/obj/PCH.hpp.gch: src/PCH.hpp | bin/Release/dep/PCH.d bin bin/Release bin/Release/dep bin/Release/dep/Platform bin/Release/dep/Platform/MacOS bin/Release/dep/Platform/Unix bin/Release/dep/Platform/Win32 bin/Release/dep/Utility bin/Release/obj bin/Release/obj/Platform bin/Release/obj/Platform/MacOS bin/Release/obj/Platform/Unix bin/Release/obj/Platform/Win32 bin/Release/obj/Utility
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'PCH'
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/5=0%
#  recipe to execute (from 'Makefile', line 313):
	$(call compile_with,@,<,$(PCH_COMPILE),$(POST_COMPILE))

.SUFFIXES: .c .cpp .h .hpp .rc .res .inl .o .d .asm
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.rc:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.PHONY: rebuild buildprod makepch makebuild clean rmprod mkdirprod releasetoprod makeproduction
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
bin/Release/dep/%.d:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
bin/Release/obj/Main.cpp.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

bin/Release/game.dll: bin/Release/obj/PCH.hpp.gch bin/Release/obj/Platform/Unix/LinuxPlatform.cpp.o bin/Release/obj/Platform/MacOS/MacOSPlatform.cpp.o bin/Release/obj/Platform/Win32/WindowsPlatform.cpp.o bin/Release/obj/Main.cpp.o
 
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 329):
	$(call linking_with,$@)
	-$(_Q)rm -rf $(BLD_DIR)/$(_BASENAME).def $(BLD_DIR)/$(_BASENAME).a
	$(_Q)$(CC) -shared -Wl,--output-def="$(BLD_DIR)/$(_BASENAME).def" -Wl,--out-implib="$(BLD_DIR)/$(_BASENAME).a" -Wl,--dll $(_LIB_DIRS) $(OBJS) -o $@ $(_SYMBOLS) $(_LINK_LIBRARIES) $(BUILD_FLAGS)
	@printf '\n'

# files hash-table stats:
# Load=57/1024=6%, Rehash=0, Collisions=12/270=4%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 102 / storage = 1385 B / avg = 13 B
# current buf: size = 8162 B / used = 1385 B / count = 102 / avg = 13 B

# strcache performance: lookups = 314 / hit rate = 67%
# hash-table stats:
# Load=102/8192=1%, Rehash=0, Collisions=10/314=3%
# Finished Make data base on Mon Sep 20 22:32:46 2021

 
# GNU Make 4.3
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2020 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Mon Sep 20 22:32:46 2021

# Variables

# makefile (from 'Makefile', line 194)
_PCH_GCH := bin/Release/obj/PCH.hpp.gch
# environment
GDK_BACKEND = x11
# environment
LC_ALL = C
# environment
NO_AT_BRIDGE = 1
# makefile (from 'Makefile', line 124)
PRODUCTION_MACOS_ICON = icon
# makefile (from 'Makefile', line 177)
OBJ_SUBDIRS := bin/Release/obj/Utility bin/Release/obj/Platform bin/Release/obj/Platform/Unix bin/Release/obj/Platform/MacOS bin/Release/obj/Platform/Win32
# environment
GTK_RC_FILES = /etc/gtk/gtkrc:/home/keith/.gtkrc:/home/keith/.config/gtkrc
# makefile (from 'Makefile', line 274)
color_blue := \033[0;34m
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-412a4bcc-b6de-422a-90dd-7e82139cbc0c.sock
# makefile (from 'Makefile', line 87)
SRC_DIR := src
# environment
LC_NAME = en_IE.UTF-8
# environment
LC_NUMERIC = en_IE.UTF-8
# environment
VSCODE_CWD = /home/keith
# makefile (from 'Makefile', line 22)
SRC_TARGET = 
# environment
UBUNTU_MENUPROXY = 1
# makefile (from 'Makefile', line 234)
ASM_COMPILE = objdump -d -C -Mintel $< > $@
# environment
LC_ADDRESS = en_IE.UTF-8
# default
MAKE_COMMAND := make
# environment
GTK3_MODULES = canberra-gtk-module:xapp-gtk3-module
# makefile (from 'Makefile', line 205)
_DIRECTORIES := bin bin/Release bin/Release/dep bin/Release/dep/Platform bin/Release/dep/Platform/MacOS bin/Release/dep/Platform/Unix bin/Release/dep/Platform/Win32 bin/Release/dep/Utility bin/Release/obj bin/Release/obj/Platform bin/Release/obj/Platform/MacOS bin/Release/obj/Platform/Unix bin/Release/obj/Platform/Win32 bin/Release/obj/Utility
# automatic
@D = $(patsubst %/,%,$(dir $@))
# makefile (from 'Makefile', line 91)
SOURCE_FILES := Platform/Unix/LinuxPlatform.cpp Platform/MacOS/MacOSPlatform.cpp Platform/Win32/WindowsPlatform.cpp Platform/Win32/Resource.rc Main.cpp
# makefile (from 'Makefile', line 171)
OBJ_DIR := bin/Release/obj
# makefile (from 'env/linux.all.mk', line 19)
PRODUCTION_LINUX_ICON := sfml
# environment
VSCODE_BROWSER_CODE_LOADING = bypassHeatCheck
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# makefile (from 'Makefile', line 99)
_LINK_LIBRARIES := -lsfml-graphics -lsfml-audio -lsfml-network -lsfml-window -lsfml-system -lstdc++fs -lX11
# default
.VARIABLES := 
# environment
PWD = /home/keith/OneDrive/College Files/Semester 05/C++ Introduction/sfml-vscode-boilerplate
# makefile (from 'Makefile', line 385)
define do_copy_to
	@printf  '$(color_blue)cp -r $(1) $(2)\n'
	$(shell cp -r "$(1)" "$(2)")
endef
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
MAIL = /var/spool/mail/keith
# environment
OLDPWD = /home/keith
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'env/linux.all.mk', line 7)
INCLUDE_DIRS := /usr/local/include
# makefile (from 'Makefile', line 128)
PRODUCTION_MACOS_MAKE_DMG = true
# environment
VSCODE_LOG_STACK = false
# automatic
%F = $(notdir $%)
# environment
VSCODE_CODE_CACHE_PATH = /home/keith/.config/Code - OSS/CachedData/2d23c42a936db1c7b3b06f918cde29561cc47cd6
# environment
XDG_SESSION_PATH = /org/freedesktop/DisplayManager/Session1
# makefile (from 'Makefile', line 180)
_DEPS := Platform/Unix/LinuxPlatform.cpp.d Platform/MacOS/MacOSPlatform.cpp.d Platform/Win32/WindowsPlatform.cpp.d Main.cpp.d
# environment
LANG = C
# environment
XAUTHORITY = /home/keith/.Xauthority
# default
.LOADED := 
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# makefile (from 'Makefile', line 126)
PRODUCTION_MACOS_BUNDLE_DISPLAY_NAME = App
# makefile
MAKEFLAGS = pqrR --no-print-directory
# makefile (from 'Makefile', line 207)
_CLEAN := true
# makefile (from 'Makefile', line 277)
define compile_with
	$(if $(_CLEAN),@printf '   $(color_blue)$($(2):$(OBJ_DIR)/%=%)\n',@printf '$(color_blue)')
	$(_Q)$(3) && $(4)
endef
# makefile (from 'Makefile', line 175)
_OBJS := Platform/Unix/LinuxPlatform.cpp.o Platform/MacOS/MacOSPlatform.cpp.o Platform/Win32/WindowsPlatform.cpp.o Main.cpp.o
# makefile
CURDIR := /home/keith/OneDrive/College Files/Semester 05/C++ Introduction/sfml-vscode-boilerplate
# environment
VSCODE_PIPE_LOGGING = true
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
PAM_KWALLET5_LOGIN = /run/user/1000/kwallet5.socket
# makefile (from 'Makefile', line 228)
OBJ_COMPILE_T = $(CC) $(CFLAGS_DEPS_T) $(_BUILD_MACROS) $(_INCLUDE_DIRS) $(_INCLUDE_PCH) $(CFLAGS) -o $@ -c $<
# environment
MFLAGS = -pqrR --no-print-directory
# makefile (from 'Makefile', line 217)
RC = windres.exe
# default
.SHELLFLAGS := -c
# makefile (from 'Makefile', line 98)
_BUILD_MACROS := 
# environment
QT_LINUX_ACCESSIBILITY_ALWAYS_ON = 1
# makefile (from 'env/linux.all.mk', line 10)
BUILD_FLAGS :=  -pthread
# makefile (from 'Makefile', line 209)
_TARGET_DEPS := bin/Release/obj/PCH.hpp.gch bin/Release/obj/Platform/Unix/LinuxPlatform.cpp.o bin/Release/obj/Platform/MacOS/MacOSPlatform.cpp.o bin/Release/obj/Platform/Win32/WindowsPlatform.cpp.o bin/Release/obj/Main.cpp.o  
# environment
XDG_CONFIG_DIRS = /home/keith/.config/kdedefaults:/etc/xdg
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'env/.all.mk', line 28)
PRODUCTION_DEPENDENCIES := content
# environment
XCURSOR_THEME = Sweet-cursors
# environment
XDG_SESSION_DESKTOP = KDE
# environment
VSCODE_CRASH_REPORTER_START_OPTIONS = {"companyName":"Microsoft","productName":"Code - OSS","submitURL":"","uploadToServer":false}
# makefile (from 'env/linux.all.mk', line 22)
PRODUCTION_LINUX_APP_COMMENT := My SFML Game
# makefile (from 'env/linux.all.mk', line 1)
MAKEFILE_LIST := Makefile env/.all.mk env/.release.mk env/linux.all.mk
# automatic
@F = $(notdir $@)
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
VSCODE_PID = 6254
# makefile (from 'Makefile', line 127)
PRODUCTION_MACOS_BUNDLE_NAME = App
# environment
XDG_SESSION_TYPE = x11
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'env/.all.mk', line 7)
_CFLAGS_OTHER := -fdiagnostics-color=always
# makefile (from 'Makefile', line 185)
_PCH_HFILE := PCH.hpp
# environment
SESSION_MANAGER = local/garuda:@/tmp/.ICE-unix/2550,unix/garuda:/tmp/.ICE-unix/2550
# automatic
*F = $(notdir $*)
# makefile (from 'Makefile', line 189)
_SYMBOLS := -s
# makefile (from 'Makefile', line 243)
UNI_LINK := ⇛
# environment
CHROME_DESKTOP = code-oss.desktop
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# automatic
<D = $(patsubst %/,%,$(dir $<))
# makefile (from 'Makefile', line 179)
DEP_DIR := bin/Release/dep
# makefile (from 'Makefile', line 119)
_LINUX_GREP_CWD := \/home\/keith\/OneDrive\/College Files\/Semester 05\/C++ Introduction\/sfml-vscode-boilerplate
# makefile (from 'Makefile', line 182)
DEP_SUBDIRS := bin/Release/dep/Utility bin/Release/dep/Platform bin/Release/dep/Platform/Unix bin/Release/dep/Platform/MacOS bin/Release/dep/Platform/Win32
# makefile (from 'Makefile', line 13)
PLATFORM = linux
# environment
VSCODE_NLS_CONFIG = {"locale":"en-gb","availableLanguages":{},"_languagePackSupport":true}
# environment
BREAKPAD_DUMP_LOCATION = /home/keith/.config/Code - OSS/exthost Crash Reports
# default
MAKE_HOST := x86_64-pc-linux-gnu
# makefile (from 'Makefile', line 176)
OBJS := bin/Release/obj/Platform/Unix/LinuxPlatform.cpp.o bin/Release/obj/Platform/MacOS/MacOSPlatform.cpp.o bin/Release/obj/Platform/Win32/WindowsPlatform.cpp.o bin/Release/obj/Main.cpp.o
# makefile (from 'Makefile', line 10)
SHELL := /bin/sh
# default
MAKECMDGOALS := all
# makefile (from 'Makefile', line 242)
UNI_COPY := ➦
# environment
SHLVL = 0
# makefile (from 'Makefile', line 186)
_PCH_EXT := hpp
# makefile (from 'env/.all.mk', line 3)
DUMP_ASSEMBLY := false
# environment
MAKELEVEL := 0
# makefile (from 'Makefile', line 290)
MKDIR := @mkdir -p
# default
MAKE = $(MAKE_COMMAND)
# makefile (from 'Makefile', line 16)
_BUILDL := release
# environment
PATH = /usr/local/sbin:/usr/local/bin:/usr/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl
# makefile (from 'Makefile', line 74)
BUILD_MACROS = 
# default
MAKEFILES := 
# makefile (from 'Makefile', line 96)
_INCLUDE_DIRS := -Isrc/ -Ilib/ -I/usr/local/include
# environment
LC_MONETARY = en_IE.UTF-8
# environment
MOTD_SHOWN = pam
# automatic
^F = $(notdir $^)
# environment
LC_TIME = en_IE.UTF-8
# makefile (from 'Makefile', line 125)
PRODUCTION_MACOS_BUNDLE_COMPANY = developer
# makefile (from 'Makefile', line 221)
CFLAGS_DEPS_T = -MT $@ -MMD -MP -MF $(DEP_DIR)/.$(TEST_DIR)/$*.Td
# makefile (from 'Makefile', line 282)
linking_with = 	$(if $(_CLEAN),@printf '\n$(color_blue)$(UNI_LINK)  Linking: $(1)')
# environment
VSCODE_LOG_NATIVE = false
# makefile (from 'Makefile', line 222)
PCH_COMPILE = $(CC) $(CFLAGS_DEPS) $(_BUILD_MACROS) $(CFLAGS) $(_INCLUDE_DIRS) -o $@ -c $<
# makefile (from 'Makefile', line 224)
_INCLUDE_PCH := -include bin/Release/obj/PCH.hpp
# makefile (from 'Makefile', line 37)
BUILD_STATIC = false
# makefile (from 'Makefile', line 227)
OBJ_COMPILE = $(CC) $(CFLAGS_DEPS) $(_BUILD_MACROS) $(_INCLUDE_DIRS) $(_INCLUDE_PCH) $(CFLAGS) -o $@ -c $<
# environment
LC_TELEPHONE = en_IE.UTF-8
# automatic
?F = $(notdir $?)
# environment
KDE_APPLICATIONS_AS_SCOPE = 1
# makefile (from 'Makefile', line 83)
NAME = game.exe
# environment
XDG_SEAT = seat0
# environment
XDG_CURRENT_DESKTOP = KDE
# automatic
+F = $(notdir $+)
# environment
XDG_SEAT_PATH = /org/freedesktop/DisplayManager/Seat0
# environment
DESKTOP_SESSION = plasma
# makefile (from 'Makefile', line 212)
_Q := @
# makefile (from 'env/.all.mk', line 2)
CLEAN_OUTPUT := true
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = KDE
# makefile (from 'Makefile', line 236)
POST_COMPILE = mv -f $(DEP_DIR)/$*.Td $(DEP_DIR)/$*.d && touch $@
# makefile (from 'Makefile', line 169)
_SOURCES_IF_RC := Platform/Unix/LinuxPlatform.cpp Platform/MacOS/MacOSPlatform.cpp Platform/Win32/WindowsPlatform.cpp Main.cpp
# 'override' directive
GNUMAKEFLAGS := 
# environment
LOGNAME = keith
# makefile (from 'Makefile', line 93)
PROJECT_DIRS := Utility Platform Platform/Unix Platform/MacOS Platform/Win32
# environment
XDG_VTNR = 1
# makefile (from 'env/linux.all.mk', line 14)
LINK_LIBRARIES := sfml-graphics sfml-audio sfml-network sfml-window sfml-system stdc++fs X11
 
# makefile (from 'Makefile', line 390)
copy_to = 	$(if $(wildcard $(2)/$(notdir $(1))),,$(if $(_CLEAN),$(call do_copy_to_clean,$(1),$(2)),$(call do_copy_to,$(1),$(2))))
# makefile (from 'Makefile', line 286)
build_deps = 	$(foreach dep,$(BUILD_DEPENDENCIES),$(call copy_to,$(dep),$(BLD_DIR)))
# makefile
.DEFAULT_GOAL := all
# environment
SYSTEMD_EXEC_PID = 2381
# makefile (from 'Makefile', line 129)
PRODUCTION_MACOS_BACKGROUND = dmg-background
# makefile (from 'Makefile', line 275)
color_purple := \033[0;35m
# makefile (from 'Makefile', line 230)
RC_COMPILE = -$(RC) -J rc -O coff --preprocessor-arg=-MT --preprocessor-arg=$@ --preprocessor-arg=-MMD --preprocessor-arg=-MP --preprocessor-arg=-MF --preprocessor-arg=$(DEP_DIR)/$*.rc.Td $(_BUILD_MACROS) $(_INCLUDE_DIRS) -i $< -o $@
# environment
DISPLAY = :0
# environment
GTK_MODULES = canberra-gtk-module:appmenu-gtk-module
# environment
USER = keith
# makefile (from 'Makefile', line 187)
_PCH_COMPILER_EXT := gch
# default
MAKE_VERSION := 4.3
# environment
KDE_SESSION_UID = 1000
# 'override' directive
.SHELLSTATUS := 0
# makefile (from 'Makefile', line 15)
BUILD = Release
# makefile (from 'env/.all.mk', line 19)
PRODUCTION_FOLDER := build
# makefile (from 'Makefile', line 238)
POST_COMPILE_RC = mv -f $(DEP_DIR)/$*.rc.Td $(DEP_DIR)/$*.rc.d && touch $@
# makefile (from 'Makefile', line 103)
TEST_DIR := 
# environment
LC_MEASUREMENT = en_IE.UTF-8
# makefile (from 'Makefile', line 254)
ORIGIN_FLAG := '-Wl,-R$$ORIGIN'
# environment
_ = /usr/bin/make
# environment
LC_PAPER = en_IE.UTF-8
# makefile (from 'Makefile', line 167)
_LIB_DIRS := -Llib/ -L/usr/local/lib
# makefile (from 'env/.all.mk', line 5)
_CFLAGS_STD := -std=c++17
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from 'env/linux.all.mk', line 2)
CFLAGS := -O2 -std=c++17 -Wall -Werror -Wextra -Wpedantic -Wunreachable-code -Wunused -Wignored-qualifiers -Wcast-align -Wformat-nonliteral -Wformat=2 -Winvalid-pch -Wmissing-declarations -Wmissing-format-attribute -Wmissing-include-dirs -Wredundant-decls -Wswitch-default -Wodr -fdiagnostics-color=always -fpic
# makefile (from 'env/linux.all.mk', line 21)
PRODUCTION_LINUX_APP_NAME := SFML Boilerplate
# makefile (from 'env/linux.all.mk', line 4)
LIB_DIRS := /usr/local/lib
# makefile (from 'Makefile', line 192)
_PCH := bin/Release/obj/PCH.hpp
# makefile (from 'Makefile', line 60)
PRODUCTION_FOLDER_RESOURCES := build
# environment
XDG_SESSION_CLASS = user
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/services/extensions/node/extensionHostProcess
# environment
GTK2_RC_FILES = /etc/gtk-2.0/gtkrc:/home/keith/.gtkrc-2.0:/home/keith/.config/gtkrc-2.0
# environment
HOME = /home/keith
# makefile (from 'env/.all.mk', line 1)
MAX_PARALLEL_JOBS := 8
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-7e486485-1.58.0-main.sock
# environment
HG = /usr/bin/hg
# makefile (from 'Makefile', line 220)
CFLAGS_DEPS = -MT $@ -MMD -MP -MF $(DEP_DIR)/$*.Td
# environment
XDG_SESSION_ID = 2
# makefile (from 'env/.all.mk', line 21)
PRODUCTION_EXCLUDE := *.psd *.rar *.7z Thumbs.db .DS_Store
# environment
XCURSOR_SIZE = 24
# makefile (from 'Makefile', line 153)
BLD_DIR := bin/Release
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# makefile (from 'Makefile', line 79)
BUILD_DEPENDENCIES = 
# makefile (from 'Makefile', line 181)
DEPS := bin/Release/dep/Platform/Unix/LinuxPlatform.cpp.d bin/Release/dep/Platform/MacOS/MacOSPlatform.cpp.d bin/Release/dep/Platform/Win32/WindowsPlatform.cpp.d bin/Release/dep/Main.cpp.d bin/Release/dep/PCH.d
# makefile (from 'Makefile', line 2)
SUFFIXES = 
# makefile (from 'Makefile', line 162)
TARGET := bin/Release/game.exe
# environment
QT_AUTO_SCREEN_SCALE_FACTOR = 0
# makefile (from 'Makefile', line 154)
_BASENAME := game
# environment
VSCODE_CLI = 1
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# makefile (from 'env/.all.mk', line 17)
PRECOMPILED_HEADER := PCH
# makefile (from 'env/.all.mk', line 6)
_CFLAGS_WARNINGS := -Wall -Werror -Wextra -Wpedantic -Wunreachable-code -Wunused -Wignored-qualifiers -Wcast-align -Wformat-nonliteral -Wformat=2 -Winvalid-pch -Wmissing-declarations -Wmissing-format-attribute -Wmissing-include-dirs -Wredundant-decls -Wswitch-default -Wodr
# makefile (from 'Makefile', line 88)
LIB_DIR := lib
# environment
KDE_SESSION_VERSION = 5
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs archives jobserver output-sync check-symlink guile load
# makefile (from 'env/linux.all.mk', line 1)
CC := g++
# makefile (from 'Makefile', line 380)
define do_copy_to_clean
	@printf  '$(color_blue)$(UNI_COPY)  Copying \"$(1)\" to \"$(CURDIR)/$(2)\"\n'
	$(shell cp -r "$(1)" "$(2)")
endef
# makefile (from 'Makefile', line 237)
POST_COMPILE_T = mv -f $(DEP_DIR)/.$(TEST_DIR)/$*.Td $(DEP_DIR)/.$(TEST_DIR)/$*.d && touch $@
# environment
KDE_FULL_SESSION = true
# environment
LC_IDENTIFICATION = en_IE.UTF-8
# variable set hash-table stats:
# Load=202/1024=20%, Rehash=0, Collisions=38/461=8%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# bin/Release/dep/.: could not be stat'd.
# bin/Release/obj: could not be stat'd.
# / (device 29, inode 256): No files, no impossibilities so far.
# src (device 47, inode 125383): No files, no impossibilities so far.
# . (device 47, inode 104709): 17 files, no impossibilities.
# bin/Release/dep: could not be stat'd.

# 17 files, no impossibilities in 6 directories.

# Implicit Rules

bin/Release/obj/%.o: src/% bin/Release/obj/PCH.hpp.gch | bin/Release/dep/%.d bin bin/Release bin/Release/dep bin/Release/dep/Platform bin/Release/dep/Platform/MacOS bin/Release/dep/Platform/Unix bin/Release/dep/Platform/Win32 bin/Release/dep/Utility bin/Release/obj bin/Release/obj/Platform bin/Release/obj/Platform/MacOS bin/Release/obj/Platform/Unix bin/Release/obj/Platform/Win32 bin/Release/obj/Utility
#  recipe to execute (from 'Makefile', line 307):
	$(call compile_with,@,<,$(OBJ_COMPILE),$(POST_COMPILE))

bin/Release/obj/./%.o: /% bin/Release/obj/PCH.hpp.gch | bin/Release/dep/./%.d bin bin/Release bin/Release/dep bin/Release/dep/Platform bin/Release/dep/Platform/MacOS bin/Release/dep/Platform/Unix bin/Release/dep/Platform/Win32 bin/Release/dep/Utility bin/Release/obj bin/Release/obj/Platform bin/Release/obj/Platform/MacOS bin/Release/obj/Platform/Unix bin/Release/obj/Platform/Win32 bin/Release/obj/Utility
#  recipe to execute (from 'Makefile', line 310):
	$(call compile_with,@,<,$(OBJ_COMPILE_T),$(POST_COMPILE_T))

bin/Release/obj/%.hpp.gch: src/%.hpp | bin/Release/dep/%.d bin bin/Release bin/Release/dep bin/Release/dep/Platform bin/Release/dep/Platform/MacOS bin/Release/dep/Platform/Unix bin/Release/dep/Platform/Win32 bin/Release/dep/Utility bin/Release/obj bin/Release/obj/Platform bin/Release/obj/Platform/MacOS bin/Release/obj/Platform/Unix bin/Release/obj/Platform/Win32 bin/Release/obj/Utility
#  recipe to execute (from 'Makefile', line 313):
	$(call compile_with,@,<,$(PCH_COMPILE),$(POST_COMPILE))

bin/Release/obj/%.res: src/%.rc | bin/Release/dep/%.rc.d bin bin/Release bin/Release/dep bin/Release/dep/Platform bin/Release/dep/Platform/MacOS bin/Release/dep/Platform/Unix bin/Release/dep/Platform/Win32 bin/Release/dep/Utility bin/Release/obj bin/Release/obj/Platform bin/Release/obj/Platform/MacOS bin/Release/obj/Platform/Unix bin/Release/obj/Platform/Win32 bin/Release/obj/Utility
#  recipe to execute (from 'Makefile', line 316):
	$(call compile_with,@,<,$(RC_COMPILE),$(POST_COMPILE_RC))

/%.o.asm: bin/Release/obj/%.o
#  recipe to execute (from 'Makefile', line 319):
	$(if $(_CLEAN),@printf '   $(color_purple)$@\n')
	$(_Q)$(ASM_COMPILE)

bin/Release/lib%-s.a: bin/Release/obj/PCH.hpp.gch bin/Release/obj/Platform/Unix/LinuxPlatform.cpp.o bin/Release/obj/Platform/MacOS/MacOSPlatform.cpp.o bin/Release/obj/Platform/Win32/WindowsPlatform.cpp.o bin/Release/obj/Main.cpp.o
#  recipe to execute (from 'Makefile', line 323):
	$(call linking_with,$@)
	-$(_Q)rm -rf $@
	$(_Q)ar -c -r -s $@ $(OBJS)
	@printf '\n'

bin/Release/dep/%.d:
#  recipe to execute (from 'Makefile', line 464):
	

%.c:

%.cpp:

%.h:

%.hpp:

%.rc:

%.res:

%.inl:

%.o:

%.d:

%.asm:

# 17 implicit rules, 0 (0.0%) terminal.
# Files

# Not a target:
.cpp:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
env/linux.all.mk:
#  Implicit rule search has been done.
#  Last modified 2021-09-18 20:00:45
#  File has been updated.
#  Successfully updated.

# Not a target:
.h:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
env/linux.release.mk:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Failed to be updated.

# Not a target:
.hpp:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

bin/Release/obj/Platform/MacOS:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

bin/Release/obj/Platform/Unix:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

bin/Release/dep:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

bin/Release/dep/Platform/Win32:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

makeproduction: rmprod mkdirprod releasetoprod
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 428):
	@printf '   $(color_blue)Adding dynamic libraries & project dependencies...\n'
	$(foreach dep,$(PRODUCTION_DEPENDENCIES),$(call copy_to,$(dep),$(PRODUCTION_FOLDER_RESOURCES)))
	$(foreach excl,$(PRODUCTION_EXCLUDE),$(shell find "$(PRODUCTION_FOLDER_RESOURCES)" -name '$(excl)' -delete))

.PRECIOUS: bin/Release/dep/%.d
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

bin/Release/game.so: bin/Release/obj/PCH.hpp.gch bin/Release/obj/Platform/Unix/LinuxPlatform.cpp.o bin/Release/obj/Platform/MacOS/MacOSPlatform.cpp.o bin/Release/obj/Platform/Win32/WindowsPlatform.cpp.o bin/Release/obj/Main.cpp.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 335):
	$(call linking_with,$@)
	$(_Q)$(CC) -shared $(_LIB_DIRS) $(OBJS) -o $@ $(_SYMBOLS) $(_LINK_LIBRARIES) $(BUILD_FLAGS)
	@printf '\n'

# Not a target:
env/.release.mk:
 
#  Implicit rule search has been done.
#  Last modified 2021-09-18 20:00:45
#  File has been updated.
#  Successfully updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2021-09-18 20:00:45
#  File has been updated.
#  Successfully updated.

bin/Release/game.dylib: bin/Release/obj/PCH.hpp.gch bin/Release/obj/Platform/Unix/LinuxPlatform.cpp.o bin/Release/obj/Platform/MacOS/MacOSPlatform.cpp.o bin/Release/obj/Platform/Win32/WindowsPlatform.cpp.o bin/Release/obj/Main.cpp.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 340):
	$(call linking_with,$(BLD_DIR)/$(_BASENAME).dylib)
	$(_Q)$(CC) -dynamiclib -undefined suppress -flat_namespace $(_LIB_DIRS) $(OBJS) -o $@ $(_SYMBOLS) $(_LINK_LIBRARIES) $(BUILD_FLAGS)
	@printf '\n'

bin/Release/dep/Platform:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

mkdirprod:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 377):
	$(MKDIR) "$(PRODUCTION_FOLDER)"

bin/Release/dep/Platform/MacOS:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

# Not a target:
.asm:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

bin/Release/obj/Platform:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

.DELETE_ON_ERROR: all
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

buildprod: all makeproduction
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 361):
	$(if $(_CLEAN),@printf '   $(color_blue)Cleaning old build files & folders...\n\n',@printf '$(color_blue)')
	$(_Q)$(RM) $(TARGET) $(DEPS) $(OBJS)

bin/Release:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

bin/Release/game.exe: bin/Release/obj/PCH.hpp.gch bin/Release/obj/Platform/Unix/LinuxPlatform.cpp.o bin/Release/obj/Platform/MacOS/MacOSPlatform.cpp.o bin/Release/obj/Platform/Win32/WindowsPlatform.cpp.o bin/Release/obj/Main.cpp.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 345):
	$(call linking_with,$@)
	$(_Q)$(CC) $(_LIB_DIRS) $(_SYMBOLS) -o $@ $(ORIGIN_FLAG) $(OBJS) $(_LINK_LIBRARIES) $(BUILD_FLAGS)
	@printf '\n'
	$(call build_deps)

bin/Release/dep/Platform/Unix:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

# Not a target:
bin/Release/obj/Platform/MacOS/MacOSPlatform.cpp.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
bin/Release/obj/Platform/Unix/LinuxPlatform.cpp.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

makebuild: bin/Release/game.exe
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 298):
	@printf '   $(color_blue)Target is up to date.\n'

bin/Release/obj/Utility:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

all:
#  Command line target.
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  Modification time never checked.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := all
# automatic
# * := 
# automatic
# < := 
# automatic
# + := 
# automatic
# % := 
# automatic
# ^ := 
# automatic
# ? := 
# automatic
# | := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=4/16=25%
#  recipe to execute (from 'Makefile', line 262):
	@$(MAKE) makepch
	@$(MAKE) -j$(MAX_PARALLEL_JOBS) makebuild

bin/Release/obj/Platform/Win32:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

rmprod:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 369):
	@printf '\n'
	-$(_Q)rm -rf "$(if $(filter osx,$(PLATFORM)),$(PRODUCTION_FOLDER_MACOS),$(PRODUCTION_FOLDER))"
	-$(_Q)rm -rf ~/.local/share/applications/$(NAME).desktop

# Not a target:
.res:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
env/.all.mk:
#  Implicit rule search has been done.
#  Last modified 2021-09-18 20:00:45
#  File has been updated.
#  Successfully updated.

# Not a target:
.d:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

makepch: bin/Release/obj/PCH.hpp.gch
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 293):
	@printf ''

# Not a target:
.inl:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

bin:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

# Not a target:
.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

bin/Release/obj:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

rebuild: clean all
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
.c:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
bin/Release/obj/Platform/Win32/WindowsPlatform.cpp.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

releasetoprod: bin/Release/game.exe
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 409):
	$(_Q)cp $(TARGET) "$(PRODUCTION_FOLDER)"
	$(_Q)cp "env/linux/$(PRODUCTION_LINUX_ICON).png" "$(PRODUCTION_FOLDER)/$(PRODUCTION_LINUX_ICON).png"
	$(_Q)cp "env/linux/exec.desktop "$(PRODUCTION_FOLDER)/$(NAME).desktop"
	$(_Q)sed -i 's/^Exec=.*/Exec=$(_LINUX_GREP_CWD)\/$(PRODUCTION_FOLDER)\/$(NAME)/' "$(PRODUCTION_FOLDER)/$(NAME).desktop"
	$(_Q)sed -i 's/^Path=.*/Path=$(_LINUX_GREP_CWD)\/$(PRODUCTION_FOLDER)/' "$(PRODUCTION_FOLDER)/$(NAME).desktop"
	$(_Q)sed -i 's/^Name=.*/Name=$(PRODUCTION_LINUX_APP_NAME)/' "$(PRODUCTION_FOLDER)/$(NAME).desktop"
	$(_Q)sed -i 's/^Comment=.*/Comment=$(PRODUCTION_LINUX_APP_COMMENT)/' "$(PRODUCTION_FOLDER)/$(NAME).desktop"
	$(_Q)sed -i 's/^Icon=.*/Icon=$(_LINUX_GREP_CWD)\/$(PRODUCTION_FOLDER)\/$(PRODUCTION_LINUX_ICON).png/' "$(PRODUCTION_FOLDER)/$(NAME).desktop"
	$(_Q)chmod +x "$(PRODUCTION_FOLDER)/$(NAME)"
	$(_Q)chmod +x "$(PRODUCTION_FOLDER)/$(NAME).desktop"
	$(_Q)cp "$(PRODUCTION_FOLDER)/$(NAME).desktop" ~/.local/share/applications

bin/Release/game: bin/Release/obj/PCH.hpp.gch bin/Release/obj/Platform/Unix/LinuxPlatform.cpp.o bin/Release/obj/Platform/MacOS/MacOSPlatform.cpp.o bin/Release/obj/Platform/Win32/WindowsPlatform.cpp.o bin/Release/obj/Main.cpp.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 351):
	$(call linking_with,$@)
	$(_Q)$(CC) $(_LIB_DIRS) $(_SYMBOLS) -o $@ $(ORIGIN_FLAG) $(OBJS) $(_LINK_LIBRARIES) $(BUILD_FLAGS)
	@printf '\n'
	$(call build_deps)

bin/Release/dep/Utility:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 357):
	$(if $(_CLEAN),,@printf '\$(color_blue)')
	$(MKDIR) $@

# Not a target:
bin/Release/obj/PCH.hpp.gch:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.SUFFIXES: .c .cpp .h .hpp .rc .res .inl .o .d .asm
#  Implicit rule search has not been done.
#  Modification time never checked.
 
#  File has not been updated.

# Not a target:
.rc:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.PHONY: rebuild buildprod makepch makebuild clean rmprod mkdirprod releasetoprod makeproduction
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
bin/Release/dep/%.d:
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
bin/Release/obj/Main.cpp.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

bin/Release/game.dll: bin/Release/obj/PCH.hpp.gch bin/Release/obj/Platform/Unix/LinuxPlatform.cpp.o bin/Release/obj/Platform/MacOS/MacOSPlatform.cpp.o bin/Release/obj/Platform/Win32/WindowsPlatform.cpp.o bin/Release/obj/Main.cpp.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 329):
	$(call linking_with,$@)
	-$(_Q)rm -rf $(BLD_DIR)/$(_BASENAME).def $(BLD_DIR)/$(_BASENAME).a
	$(_Q)$(CC) -shared -Wl,--output-def="$(BLD_DIR)/$(_BASENAME).def" -Wl,--out-implib="$(BLD_DIR)/$(_BASENAME).a" -Wl,--dll $(_LIB_DIRS) $(OBJS) -o $@ $(_SYMBOLS) $(_LINK_LIBRARIES) $(BUILD_FLAGS)
	@printf '\n'

# files hash-table stats:
# Load=55/1024=5%, Rehash=0, Collisions=8/231=3%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 96 / storage = 1322 B / avg = 13 B
# current buf: size = 8162 B / used = 1322 B / count = 96 / avg = 13 B

# strcache performance: lookups = 269 / hit rate = 64%
# hash-table stats:
# Load=96/8192=1%, Rehash=0, Collisions=7/269=3%
# Finished Make data base on Mon Sep 20 22:32:46 2021

 
